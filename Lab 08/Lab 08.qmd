---
title: "Lab 08"
author: "Bomin Xie A16144147"
format: pdf
---

# Exploratory data analysis
## Preparing the data
```{r}
# Save your input data file into your Project directory
fna.data <- "https://marcos-diazg.github.io/BIMM143_SP23/class-material/class8/WisconsinCancer.csv"

# Complete the following code to input the data and store as wisc.df
wisc.df <- read.csv(fna.data, row.names=1)
```

```{r}
# Examine the input data
# View(wisc.df)
```

```{r}
# We can use -1 here to remove the first column
wisc.data <- wisc.df[,-1]
```

```{r}
# Create diagnosis vector for later 
diagnosis <- as.factor(wisc.df[,1])
```

## Exploratory data analysis

Q1: By observing the `dim(wisc.df)`, 569 observation are in the dataset
Q2: By observing the `sum(diagnosis == "M)`, 212 observations have a malignant diagnosis
Q3: By observing `sum(grepl("_mean$", names(wisc.data)))`, 10 variables/features in the data are suffixed with `_mean`

# Prinicipal Component Analysis

```{r}
# Check column means and standard deviations
colMeans(wisc.data)

apply(wisc.data,2,sd)
```

```{r}
# Perform PCA on wisc.data by completing the following code
wisc.pr <- prcomp( wisc.data, scale=TRUE )
```

```{r}
# Look at summary of results
summary(wisc.pr)
```

Q4: The porportion of original variance captured by PC1 is 44.27%
Q5: Based on the result, at least 3 PC is required for at least 70% of the original variance.
Q6: Based on the result, at least 7 PC is required for at least 90% of the original variance.

## Interpreting PCA results

```{r}
biplot( wisc.pr )

```

Q7: The plot is hard to interpret since all the legends and notes are overlapped each other, making the plot hard to read.

```{r}
# Scatter plot observations by components 1 and 2
plot( wisc.pr$x[,1:2] , col = diagnosis , 
     xlab = "PC1", ylab = "PC2")
```

Q8:
```{r}
# Repeat for components 1 and 3
plot(wisc.pr$x[, 1], wisc.pr$x[, 3], col = diagnosis, 
     xlab = "PC1", ylab = "PC3")
```

These plots shares similar fashions in clustering.

```{r}
# Create a data.frame for ggplot
df <- as.data.frame(wisc.pr$x)
df$diagnosis <- diagnosis

# Load the ggplot2 package
library(ggplot2)

# Make a scatter plot colored by diagnosis
ggplot(df) + 
  aes(PC1, PC2, col=diagnosis) + 
  geom_point()
```

## Variance explained

```{r}
# Calculate variance of each component
pr.var <- wisc.pr$sdev^2
head(pr.var)
```

```{r}
# Variance explained by each principal component: pve
pve <- pr.var / sum(pr.var)

# Plot variance explained for each principal component
plot(pve, xlab = "Principal Component", 
     ylab = "Proportion of Variance Explained", 
     ylim = c(0, 1), type = "o")
```
```{r}
# Alternative scree plot of the same data, note data driven y-axis
barplot(pve, ylab = "Precent of Variance Explained",
     names.arg=paste0("PC",1:length(pve)), las=2, axes = FALSE)
axis(2, at=pve, labels=round(pve,2)*100 )
```

```{r}
## ggplot based graph
# install.packages("factoextra")
# library(factoextra)
# fviz_eig(wisc.pr, addlabels = TRUE)
```

# Hierarchical clustering

```{r}
# Scale the wisc.data data using the "scale()" function
data.scaled <- scale(wisc.data)
```

```{r}
data.dist <- dist(data.scaled)

wisc.hclust <- hclust(data.dist, method="complete")
```

Q10:

```{r}
plot(wisc.hclust)
abline(h=19.7, col="red", lty=2)
```
The height at 19.8 which the clustering model has 4 clusters.

## Selecting number of clusters

```{r}
wisc.hclust.clusters <- cutree(wisc.hclust, k=4)
table(wisc.hclust.clusters, diagnosis)
```

## Using different methods

Q12: The use of `ward.D2` gives the favorate results for the same dataset. It generates a more distinguishable clusters compared to other methods.

```{r}
plot(hclust(data.dist, method="ward.D2"))
```

# Combining methods

```{r}
pcdist <- dist(wisc.pr$x[,1:3])
wisc.pr.hclust <- hclust(pcdist, method="ward.D2")
plot(wisc.pr.hclust)
```


```{r}
grps <- cutree(wisc.pr.hclust, k=2)
table(grps)
```

```{r}
table(grps, diagnosis)
```

```{r}
plot(wisc.pr$x[,1:2], col=grps)
```

```{r}
plot(wisc.pr$x[,1:2], col=diagnosis)
```

```{r}
g <- as.factor(grps)
levels(g)
```

```{r}
g <- relevel(g,2)
levels(g)
```

```{r}
plot(wisc.pr$x[,1:2], col=g)
```

```{r}
# library(rgl)
# plot3d(wisc.pr$x[,1:3], xlab="PC 1", ylab="PC 2", zlab="PC 3", cex=1.5, size=1, type="s", col=grps)
```

```{r}
## Use the distance along the first 7 PCs for clustering i.e. wisc.pr$x[, 1:7]
wisc.pr.hclust <- hclust(pcdist, method="ward.D2")
```

```{r}
wisc.pr.hclust.clusters <- cutree(wisc.pr.hclust, k=2)
```


# Sensitivity/Specificity

Q13: The newly created model with the four clusters seperate the two diagnoses greatly.

```{r}
# Compare to actual diagnoses
table(wisc.pr.hclust.clusters, diagnosis)
```

Q14:

```{r}
table(wisc.hclust.clusters, diagnosis)
```

#Sensitivity/Specificity

#Prediction
```{r}
#url <- "new_samples.csv"
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(wisc.pr, newdata=new)
npc

plot(wisc.pr$x[,1:2], col=g)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], c(1,2), col="white")
```

Q16: We should prioritize the 2nd group of patients.